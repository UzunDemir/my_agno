import streamlit as st
from agno.agent import Agent
from agno.models.deepseek import DeepSeek
from agno.tools.reasoning import ReasoningTools
from agno.tools.yfinance import YFinanceTools

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Streamlit
st.set_page_config(page_title="–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê–Ω–∞–ª–∏–∑", layout="wide")
st.title("üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
st.markdown("–ê–Ω–∞–ª–∏–∑ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å –ø–æ–º–æ—â—å—é DeepSeek –∏ YFinance.")

# –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞
agent = Agent(
    model=DeepSeek(id="deepseek-chat"),
    tools=[
        ReasoningTools(add_instructions=True),
        YFinanceTools(
            stock_price=True,
            analyst_recommendations=True,
            company_info=True,
            company_news=True,
        ),
    ],
    instructions=[
        "Use tables to display data.",
        "Include sources in your response.",
        "Only include the report in your response. No other text.",
    ],
    markdown=True,
)

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
query = st.text_area(
    "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:",
    value="–í—ã–≤–µ–¥–∏ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –æ–±—ä—è—Å–Ω–∏, –ø–æ—á–µ–º—É. –ö–∞–∫–∏–µ –ø—Ä–æ–≥–Ω–æ–∑—ã. –ß—Ç–æ –ø–æ–∫—É–ø–∞—Ç—å, –ø—Ä–æ–¥–∞–≤–∞—Ç—å?",
    height=150
)

if st.button("üîç –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç"):
    placeholder = st.empty()
    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ..."):
        output = ""
        try:
            for chunk in agent.stream_response(
                query,
                show_full_reasoning=True,
                stream_intermediate_steps=True
            ):
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–æ–∫–∞: chunk –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ —Å–ª–æ–≤–∞—Ä–µ–º
                if isinstance(chunk, dict):
                    content = chunk.get("content", "")
                else:
                    content = str(chunk)

                output += content
                placeholder.markdown(output, unsafe_allow_html=True)

        except Exception as e:
            st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
